CREATE OR REPLACE PACKAGE BODY GESTION_RESERVATION
IS
    PROCEDURE VERIFIER_RESERVATION(ID_R RESERVER.ID_RESERVATION%TYPE)
   IS
        NB_VOYAGEURS ITINERAIRE.NOMBRE_ACTUEL%TYPE;
        CAPACITE MOYEN_TRANSPORT.CAPACITE%TYPE;
        NB_P RESERVER.NOMBRE_PASSAGERS%TYPE;
        DR RESERVER.DATE_RESERVATION%TYPE;
        ID_I RESERVER.ID_ITINERAIRE%TYPE;
        ID_U RESERVER.ID_UTILISATEUR%TYPE;
        DI ITINERAIRE.DATE_DEPART%TYPE;
    BEGIN
        SELECT ID_ITINERAIRE INTO ID_I
        FROM RESERVER
        WHERE ID_RESERVATION=ID_R;
        
        SELECT DATE_DEPART INTO DI
        FROM ITINERAIRE I
        WHERE I.ID_ITINERAIRE=ID_I;
        
        SELECT DATE_RESERVATION INTO DR
        FROM RESERVER 
        WHERE ID_RESERVATION=ID_R;
        
        SELECT NOMBRE_PASSAGERS INTO NB_P 
        FROM RESERVER
        WHERE ID_RESERVATION=ID_R;

        IF DR<DI THEN 
            SELECT NOMBRE_ACTUEL INTO NB_VOYAGEURS
            FROM ITINERAIRE I
            WHERE I.ID_ITINERAIRE=ID_I;
            
            SELECT CAPACITE INTO CAPACITE
            FROM MOYEN_TRANSPORT M, ITINERAIRE I
            WHERE I.ID_ITINERAIRE=ID_I AND M.ID_TRANSPORT=I.ID_TRANSPORT;
            NB_VOYAGEURS:= NB_VOYAGEURS+NB_P;
            
            IF (NB_P<=0) THEN 
            DBMS_OUTPUT.PUT_LINE('La reservation '||ID_R||' est supprimer car le nombre des voyageurs est nul');
               DELETE FROM RESERVER
               WHERE ID_RESERVATION=ID_R;

            ELSIF (NB_VOYAGEURS>CAPACITE ) THEN
               DBMS_OUTPUT.PUT_LINE('La reservation '||ID_R||' est supprimer car le nombre des voyageurs depasse la capacite');
               DELETE FROM RESERVER
               WHERE ID_RESERVATION=ID_R;

            ELSE 
                DBMS_OUTPUT.PUT_LINE('UPDATE');
               UPDATE ITINERAIRE
               SET NOMBRE_ACTUEL=NB_VOYAGEURS
               WHERE ID_ITINERAIRE=ID_I;
            END IF;
            
        ELSE 
            DBMS_OUTPUT.PUT_LINE('La reservation '||ID_R||' est supprimer car le voyage est déjà realisé');
           DELETE FROM RESERVER
           WHERE ID_RESERVATION=ID_R;
        END IF;
    END VERIFIER_RESERVATION;
    
    PROCEDURE ASSOCIER_SOLDE(ID_U RESERVER.ID_UTILISATEUR%TYPE)
    IS
        PAYED NUMBER;
        NON NUMBER;
    BEGIN
        SELECT COUNT(ETAT) INTO PAYED
        FROM RESERVER R
        WHERE UPPER(ETAT) = 'PAYEE' AND ID_UTILISATEUR=ID_U;

        SELECT COUNT(ETAT) INTO NON
        FROM RESERVER R
        WHERE UPPER(ETAT) = 'NON PAYEE' AND ID_UTILISATEUR=ID_U;
        UPDATE UTILISATEUR
        SET SOLDE = PAYED*55-NON*5
        WHERE ID_UTILISATEUR=ID_U;
    END ASSOCIER_SOLDE;

    PROCEDURE AJOUTER_RESERVATION
    (ID_R RESERVER.ID_RESERVATION%TYPE,ID_U RESERVER.ID_UTILISATEUR%TYPE,ID_I RESERVER.ID_ITINERAIRE%TYPE,NBP RESERVER.NOMBRE_PASSAGERS%TYPE,ETAT RESERVER.ETAT%TYPE,CL RESERVER.CLASSE%TYPE)
    IS
        DR RESERVER.DATE_RESERVATION%TYPE;
        DATEI ITINERAIRE.DATE_DEPART%TYPE;
        NBACT ITINERAIRE.NOMBRE_ACTUEL%TYPE;
        CAP MOYEN_TRANSPORT.CAPACITE%TYPE;
        PRIX_P ITINERAIRE.PRIX%TYPE;
        UTIL EXCEPTION;
        ITIN EXCEPTION;
        DATERES EXCEPTION;
        NBPERS EXCEPTION;
    BEGIN
        SELECT NOMBRE_ACTUEL INTO NBACT
        FROM ITINERAIRE
        WHERE ID_ITINERAIRE=ID_I;
        
        SELECT CAPACITE INTO CAP
        FROM ITINERAIRE I, MOYEN_TRANSPORT M
        WHERE I.ID_ITINERAIRE=ID_I AND I.ID_TRANSPORT=M.ID_TRANSPORT;
        
        SELECT DATE_DEPART INTO DATEI
        FROM ITINERAIRE 
        WHERE ID_ITINERAIRE=ID_I;
        
        DR:=SYSDATE;
        IF DATEI<=DR THEN RAISE DATERES;
        
        ELSIF NBP+NBACT>=CAP OR NBP=0 THEN RAISE NBPERS;

        ELSIF NBACT IS NULL THEN RAISE ITIN;
        
        ELSE 
            INSERT INTO RESERVER(ID_RESERVATION,ID_UTILISATEUR,ID_ITINERAIRE,NOMBRE_PASSAGERS,DATE_RESERVATION,ETAT,CLASSE) 
            VALUES( ID_R,ID_U,ID_I,NBP,DR,'non payee',CL);
            SELECT PRIX INTO PRIX_P
            FROM ITINERAIRE I
            WHERE I.ID_ITINERAIRE=ID_I;
            GESTION_PAIEMENT.ASSOCIER_MONTANT (ID_R,PRIX_P,NBP,CL);
        END IF;

        EXCEPTION
        WHEN NO_DATA_FOUND THEN DBMS_OUTPUT.PUT_LINE('Veillez saisir des informations');
        WHEN DATERES THEN DBMS_OUTPUT.PUT_LINE('Nous sommes désolé, le voyage est déjà parti en '||DATEI);
        WHEN NBPERS THEN DBMS_OUTPUT.PUT_LINE('Nombre de personnes invalide');
        WHEN ITIN THEN DBMS_OUTPUT.PUT_LINE('Itineraire inexistant');
    END AJOUTER_RESERVATION;

END GESTION_RESERVATION;
